Backport of:

From 9b76785331243689a9d52cef3db05ef7462cb02d Mon Sep 17 00:00:00 2001
From: Ryan Petrello <lists@ryanpetrello.com>
Date: Wed, 1 May 2019 13:11:20 -0400
Subject: [PATCH] Apply fix from CPython for CVE-2019-9740 (#1591)

---
 src/urllib3/connection.py                 |  2 +-
 src/urllib3/connectionpool.py             |  2 +-
 src/urllib3/contrib/pyopenssl.py          |  4 ++--
 src/urllib3/contrib/socks.py              |  2 +-
 src/urllib3/poolmanager.py                |  2 +-
 src/urllib3/response.py                   |  4 +++-
 src/urllib3/util/ssl_.py                  |  2 --
 src/urllib3/util/url.py                   |  8 +++++++
 test/__init__.py                          | 29 +++++++++++++++++++++++
 test/test_util.py                         |  5 ++++
 test/with_dummyserver/test_https.py       |  4 ++++
 test/with_dummyserver/test_socketlevel.py |  2 ++
 tox.ini                                   |  2 +-
 13 files changed, 58 insertions(+), 10 deletions(-)

Index: python-urllib3-1.22/urllib3/connection.py
===================================================================
--- python-urllib3-1.22.orig/urllib3/connection.py	2019-05-13 14:19:38.494365571 -0400
+++ python-urllib3-1.22/urllib3/connection.py	2019-05-13 14:19:38.490365555 -0400
@@ -140,7 +140,7 @@ class HTTPConnection(_HTTPConnection, ob
             conn = connection.create_connection(
                 (self.host, self.port), self.timeout, **extra_kw)
 
-        except SocketTimeout as e:
+        except SocketTimeout:
             raise ConnectTimeoutError(
                 self, "Connection to %s timed out. (connect timeout=%s)" %
                 (self.host, self.timeout))
Index: python-urllib3-1.22/urllib3/connectionpool.py
===================================================================
--- python-urllib3-1.22.orig/urllib3/connectionpool.py	2019-05-13 14:19:38.494365571 -0400
+++ python-urllib3-1.22/urllib3/connectionpool.py	2019-05-13 14:19:38.490365555 -0400
@@ -673,7 +673,7 @@ class HTTPConnectionPool(ConnectionPool,
                 # released back to the pool once the entire response is read
                 response.read()
             except (TimeoutError, HTTPException, SocketError, ProtocolError,
-                    BaseSSLError, SSLError) as e:
+                    BaseSSLError, SSLError):
                 pass
 
         # Handle redirect?
Index: python-urllib3-1.22/urllib3/contrib/pyopenssl.py
===================================================================
--- python-urllib3-1.22.orig/urllib3/contrib/pyopenssl.py	2019-05-13 14:19:38.494365571 -0400
+++ python-urllib3-1.22/urllib3/contrib/pyopenssl.py	2019-05-13 14:19:38.490365555 -0400
@@ -261,7 +261,7 @@ class WrappedSocket(object):
                 return b''
             else:
                 raise SocketError(str(e))
-        except OpenSSL.SSL.ZeroReturnError as e:
+        except OpenSSL.SSL.ZeroReturnError:
             if self.connection.get_shutdown() == OpenSSL.SSL.RECEIVED_SHUTDOWN:
                 return b''
             else:
@@ -283,7 +283,7 @@ class WrappedSocket(object):
                 return 0
             else:
                 raise SocketError(str(e))
-        except OpenSSL.SSL.ZeroReturnError as e:
+        except OpenSSL.SSL.ZeroReturnError:
             if self.connection.get_shutdown() == OpenSSL.SSL.RECEIVED_SHUTDOWN:
                 return 0
             else:
Index: python-urllib3-1.22/urllib3/contrib/socks.py
===================================================================
--- python-urllib3-1.22.orig/urllib3/contrib/socks.py	2019-05-13 14:19:38.494365571 -0400
+++ python-urllib3-1.22/urllib3/contrib/socks.py	2019-05-13 14:19:38.490365555 -0400
@@ -88,7 +88,7 @@ class SOCKSConnection(HTTPConnection):
                 **extra_kw
             )
 
-        except SocketTimeout as e:
+        except SocketTimeout:
             raise ConnectTimeoutError(
                 self, "Connection to %s timed out. (connect timeout=%s)" %
                 (self.host, self.timeout))
Index: python-urllib3-1.22/urllib3/util/url.py
===================================================================
--- python-urllib3-1.22.orig/urllib3/util/url.py	2019-05-13 14:19:38.494365571 -0400
+++ python-urllib3-1.22/urllib3/util/url.py	2019-05-13 14:19:38.490365555 -0400
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 from collections import namedtuple
+import re
 
 from ..exceptions import LocationParseError
 
@@ -10,6 +11,8 @@ url_attrs = ['scheme', 'auth', 'host', '
 # urllib3 infers URLs without a scheme (None) to be http.
 NORMALIZABLE_SCHEMES = ('http', 'https', None)
 
+_contains_disallowed_url_pchar_re = re.compile('[\x00-\x20\x7f]')
+
 
 class Url(namedtuple('Url', url_attrs)):
     """
@@ -155,6 +158,11 @@ def parse_url(url):
         # Empty
         return Url()
 
+    # Prevent CVE-2019-9740.
+    # adapted from https://github.com/python/cpython/pull/12755
+    if _contains_disallowed_url_pchar_re.search(url):
+        raise LocationParseError("URL can't contain control characters. {!r}".format(url))
+
     scheme = None
     auth = None
     host = None
Index: python-urllib3-1.22/test/test_util.py
===================================================================
--- python-urllib3-1.22.orig/test/test_util.py	2019-05-13 14:19:38.494365571 -0400
+++ python-urllib3-1.22/test/test_util.py	2019-05-13 14:19:38.494365571 -0400
@@ -199,6 +199,11 @@ class TestUtil(object):
         with pytest.raises(ValueError):
             parse_url('[::1')
 
+    def test_parse_url_contains_control_characters(self):
+        # see CVE-2019-9740
+        with pytest.raises(LocationParseError):
+            parse_url('http://localhost:8000/ HTTP/1.1\r\nHEADER: INJECTED\r\nIgnore:')
+
     def test_Url_str(self):
         U = Url('http', host='google.com')
         assert str(U) == U.url

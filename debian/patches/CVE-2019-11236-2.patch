Backport of:

From efddd7e7bad26188c3b692d1090cba768afa9162 Mon Sep 17 00:00:00 2001
From: Ryan Petrello <lists@ryanpetrello.com>
Date: Thu, 2 May 2019 11:03:09 -0400
Subject: [PATCH] Avoid CVE-2019-9740 in 1.24.x by percent-encoding invalid
 target characters (#1593)

---
 src/urllib3/util/url.py |  4 ++--
 test/test_util.py       | 22 +++++++++++++++++++---
 2 files changed, 21 insertions(+), 5 deletions(-)

Index: python-urllib3-1.22/urllib3/util/url.py
===================================================================
--- python-urllib3-1.22.orig/urllib3/util/url.py	2019-05-13 14:25:01.911576410 -0400
+++ python-urllib3-1.22/urllib3/util/url.py	2019-05-13 14:25:01.907576396 -0400
@@ -3,6 +3,7 @@ from collections import namedtuple
 import re
 
 from ..exceptions import LocationParseError
+from ..packages.six.moves.urllib.parse import quote
 
 
 url_attrs = ['scheme', 'auth', 'host', 'port', 'path', 'query', 'fragment']
@@ -160,8 +161,7 @@ def parse_url(url):
 
     # Prevent CVE-2019-9740.
     # adapted from https://github.com/python/cpython/pull/12755
-    if _contains_disallowed_url_pchar_re.search(url):
-        raise LocationParseError("URL can't contain control characters. {!r}".format(url))
+    url = _contains_disallowed_url_pchar_re.sub(lambda match: quote(match.group()), url)
 
     scheme = None
     auth = None
Index: python-urllib3-1.22/test/test_util.py
===================================================================
--- python-urllib3-1.22.orig/test/test_util.py	2019-05-13 14:25:01.911576410 -0400
+++ python-urllib3-1.22/test/test_util.py	2019-05-13 14:25:01.907576396 -0400
@@ -199,10 +199,26 @@ class TestUtil(object):
         with pytest.raises(ValueError):
             parse_url('[::1')
 
-    def test_parse_url_contains_control_characters(self):
+    @pytest.mark.parametrize('url, expected_url', [
+        (
+            'http://localhost/ HTTP/1.1\r\nHEADER: INJECTED\r\nIgnore:',
+            Url('http', host='localhost', port=None,
+                path='/%20HTTP/1.1%0D%0AHEADER:%20INJECTED%0D%0AIgnore:')
+        ),
+        (
+            u'http://localhost/ HTTP/1.1\r\nHEADER: INJECTED\r\nIgnore:',
+            Url('http', host='localhost', port=None,
+                path='/%20HTTP/1.1%0D%0AHEADER:%20INJECTED%0D%0AIgnore:')
+        ),
+        (
+            'http://localhost/ ?q=\r\n',
+            Url('http', host='localhost', path='/%20', query='q=%0D%0A')
+        ),
+    ])
+    def test_parse_url_contains_control_characters(self, url, expected_url):
         # see CVE-2019-9740
-        with pytest.raises(LocationParseError):
-            parse_url('http://localhost:8000/ HTTP/1.1\r\nHEADER: INJECTED\r\nIgnore:')
+        url = parse_url(url)
+        assert url == expected_url
 
     def test_Url_str(self):
         U = Url('http', host='google.com')
